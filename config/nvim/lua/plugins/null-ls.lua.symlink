-- vi: ft=lua

local M = {}

-- unused for now
function M.config()
	-- Formatting and linting
	-- https://github.com/jose-elias-alvarez/null-ls.nvim
	local status_ok, null_ls = pcall(require, "null-ls")
	if not status_ok then
		return
	end

	-- Check supported formatters
	-- https://github.com/jose-elias-alvarez/null-ls.nvim/tree/main/lua/null-ls/builtins/formatting

	-- Check supported linters
	-- https://github.com/jose-elias-alvarez/null-ls.nvim/tree/main/lua/null-ls/builtins/diagnostics

	-- syntax to adapt builtin config
	-- null_ls.builtins.formatting.rustfmt.with({
	--   extra_args = { "--edition=2021" }
	-- })

	local c = null_ls.builtins.completion
	local d = null_ls.builtins.diagnostics
	local f = null_ls.builtins.formatting

	null_ls.setup({
		debug = false,
		sources = {
			c.spell,
			d.rubocop,
			d.shellcheck,
			d.zsh,
			f.black,
			f.rubocop,
			f.rustfmt,
			f.prettier,
			f.stylua,
		},

		-- sets format on save
		on_attach = function(client)
			if client.resolved_capabilities.document_formatting then
				-- auto format on save (not asynchronous)
				local LspFormattingGrp = vim.api.nvim_create_augroup("LspFormattingGrp", { clear = true })
				vim.api.nvim_create_autocmd("BufWritePre", {
					command = "lua vim.lsp.buf.formatting_sync()",
					group = LspFormattingGrp,
				})
			end
		end,
	})
end

return M
