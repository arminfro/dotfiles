-- vi: ft=lua

return {

	{
		"nvimtools/none-ls.nvim",
		dependencies = {
			{
				"williamboman/mason.nvim",
				opts = function(_, opts)
					vim.list_extend(
						opts.ensure_installed,
						{ "typescript-language-server", "semgrep", "eslint-lsp", "prettier", "eslint_d" }
					)
				end,
			},
		},
		opts = function(_, opts)
			table.insert(opts.sources, require("null-ls").builtins.diagnostics.semgrep)
		end,
	},

	{
		"neovim/nvim-lspconfig",
		dependencies = {
			-- TypeScript more descriptive Error Translations
			"dmmulroy/ts-error-translator.nvim",
		},
		opts = {
			servers = {
				tsserver = {
					handlers = {
						["textDocument/publishDiagnostics"] = function(err, result, ctx, config)
							require("ts-error-translator").translate_diagnostics(err, result, ctx, config)
							vim.lsp.diagnostic.on_publish_diagnostics(err, result, ctx, config)
						end,
					},
				},
			},
		},
	},

	{
		"nvim-neotest/neotest",
		optional = true,
		dependencies = {
			{
				"nvim-neotest/neotest-jest",
			},
		},
		opts = {
			discovery = {
				enabled = false,
			},
			adapters = {
				["neotest-jest"] = {},
			},
		},
	},

	{
		"dmmulroy/tsc.nvim",
		opts = {},
		cmd = { "TSC" },
		keys = {
			{
				"<leader>cp",
				":TSC<CR>",
				desc = "TS Project check",
			},
		},
	},

	-- {
	-- 	"mfussenegger/nvim-dap",
	-- 	optional = true,
	-- 	config = function()
	-- 		local dap = require("dap")
	-- 		dap.adapters.chrome = {
	-- 			type = "executable",
	-- 			command = "node",
	-- 			args = {
	-- 				os.getenv("HOME")
	-- 					.. "/.local/share/nvim/mason/packages/chrome-debug-adapter/out/src/chromeDebug.js",
	-- 			},
	-- 		}
	--
	-- 		local config = { -- change this to javascript if needed
	-- 			{
	-- 				type = "chrome",
	-- 				request = "attach",
	-- 				program = "${file}",
	-- 				cwd = vim.fn.getcwd(),
	-- 				sourceMaps = true,
	-- 				protocol = "inspector",
	-- 				port = 9222,
	-- 				webRoot = "${workspaceFolder}",
	-- 			},
	-- 		}
	--
	-- 		dap.configurations.javascriptreact = config
	-- 		dap.configurations.typescriptreact = config
	-- 		dap.configurations.javascript = config
	-- 		dap.configurations.typescript = config
	-- 	end,
	-- },
}
