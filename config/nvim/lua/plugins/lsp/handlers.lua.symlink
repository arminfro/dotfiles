-- vi: ft=lua

local M = {}

function M.setup()
  local signs = {
    { name = "DiagnosticSignError", text = "" },
    { name = "DiagnosticSignWarn", text = "" },
    { name = "DiagnosticSignHint", text = "" },
    { name = "DiagnosticSignInfo", text = "" },
  }

  for _, sign in ipairs(signs) do
    vim.fn.sign_define(sign.name, { texthl = sign.name, text = sign.text, numhl = "" })
  end

  local pop_opts = { border = vim.g.floating_window_border_dark }
  vim.lsp.handlers["textDocument/hover"] = vim.lsp.with(vim.lsp.handlers.hover, pop_opts)
  vim.lsp.handlers["textDocument/signatureHelp"] = vim.lsp.with(vim.lsp.handlers.signature_help, pop_opts)
  vim.lsp.handlers["textDocument/publishDiagnostics"] = vim.lsp.with(vim.lsp.diagnostic.on_publish_diagnostics, {
    signs = false,
    -- virtual_text = false,
    underline = true,
    -- virtual_text = {
    --   spacing = 2,
    --   prefix = " ",
    --   severity_sort = true,
    --   -- severity_limit = "Warning",
    --   -- source = "if_many",
    -- },
    -- severity_sort = true,
  })

  -- upstream error, quickfix: https://neovim.discourse.group/t/supressing-eslint-ls-errors/1687/3
  vim.lsp.handlers["window/showMessageRequest"] = function(_, result, _)
    return result
  end

  -- vim.lsp.handlers["textDocument/publishDiagnostics"] = vim.lsp.with(vim.lsp.diagnostic.on_publish_diagnostics, {
  --   virtual_text = false,
  --   underline = true,
  --   signs = true,
  --   update_in_insert = false,
  --   severity_sort = true,
  -- })
end

return M
