-- vi: ft=lua

local M = {}

local opts = { noremap = true, silent = true }
local map = vim.api.nvim_set_keymap
local set = vim.opt

vim.g.mapleader = ','

-- set.fileencoding = "utf-8"                      -- File content encoding for the buffer
-- set.spelllang = "en"                            -- Support US english
-- set.clipboard = "unnamedplus"                   -- Connection to the system clipboard
-- set.mouse = "a"                                 -- Enable mouse support
-- set.signcolumn = "yes"                          -- Always show the sign column
-- set.foldmethod = "manual"                       -- Create folds manually
-- set.completeopt = { "menuone", "noselect" }     -- Options for insert mode completion
-- set.colorcolumn = "99999"                       -- Fix for the indentline problem
-- set.backup = false                              -- Disable making a backup file
-- set.expandtab = true                            -- Enable the use of space in tab
-- set.hidden = true                               -- Ignore unsaved buffers
-- set.hlsearch = true                             -- Highlight all the matches of search pattern
-- set.ignorecase = true                           -- Case insensitive searching
-- set.smartcase = true                            -- Case sensitivie searching
-- set.spell = false                               -- Disable spelling checking and highlighting
-- set.showmode = false                            -- Disable showing modes in command line
-- set.smartindent = true                          -- Do auto indenting when starting a new line
-- set.splitbelow = true                           -- Splitting a new window below the current one
-- set.splitright = true                           -- Splitting a new window at the right of the current one
-- set.swapfile = false                            -- Disable use of swapfile for the buffer
-- set.termguicolors = true                        -- Enable 24-bit RGB color in the TUI
-- set.undofile = true                             -- Enable persistent undo
-- set.writebackup = false                         -- Disable making a backup before overwriting a file
-- set.cursorline = true                           -- Highlight the text line of the cursor
-- set.number = true                               -- Show numberline
-- set.relativenumber = true                       -- Show relative numberline
-- set.wrap = false                                -- Disable wrapping of lines longer than the width of window
-- set.conceallevel = 0                            -- Show text normally
-- set.cmdheight = 1                               -- Number of screen lines to use for the command line
-- set.shiftwidth = 2                              -- Number of space inserted for indentation
-- set.tabstop = 2                                 -- Number of space in a tab
-- set.scrolloff = 8                               -- Number of lines to keep above and below the cursor
-- set.sidescrolloff = 8                           -- Number of columns to keep at the sides of the cursor
-- set.pumheight = 10                              -- Height of the pop up menu
-- set.history = 100                               -- Number of commands to remember in a history table
-- set.timeoutlen = 300                            -- Length of time to wait for a mapped sequence
-- set.updatetime = 300                            -- Length of time to wait before triggering the plugin

vim.syntax = 'on'

vim.g.rehash256 = 1

vim.opt.tabstop = 2
vim.opt.shiftwidth = 2
vim.opt.expandtab = true

vim.opt.linebreak = true
vim.opt.whichwrap = "b,s,<,>,[,]"
vim.opt.wrap = true

-- Always draw the signcolumn.
vim.opt.signcolumn= "yes"

vim.opt.mouse = "a"

-- Folding
vim.opt.foldopen="block,hor,insert,jump,mark,percent,quickfix,search,tag,undo"
-- vim.opt.foldopen={"block","hor","insert","jump","mark","percent","quickfix","search","tag","undo"}

-- Tab completion for filenames like bash
-- https://stackoverflow.com/a/526940/6115544
vim.opt.wildmode="longest,list,full"
vim.opt.wildmenu=true

vim.cmd "filetype plugin indent on"

-- " One such option is the 'hidden' option, which allows you to re-use the same
-- " window and switch from an unsaved buffer without saving it first. Also allows
-- " you to keep an undo history for multiple files when re-using the same window
vim.opt.hidden=true

-- " Set 'nocompatible' to ward off unexpected things that your distro might
-- " have made, as well as sanely reset options when re-sourcing .vimrc
vim.nocompatible=true

-- " Show partial commands in the last line of the screen
vim.opt.showcmd=true

-- " Use case insensitive search, except when using capital letters
vim.opt.ignorecase=true
vim.opt.smartcase=true

-- " Instead of failing a command because of unsaved changes, instead raise a
-- " dialogue asking if you wish to save changed files.
vim.opt.confirm=true

-- " Use visual bell instead of beeping when doing something wrong
vim.opt.visualbell=true

-- " And reset the terminal code for the visual bell. If visualbell is set, and
-- " this line is also included, vim will neither flash nor beep. If visualbell
-- " is unset, this does nothing.
vim.t_vb = true

vim.opt.scrollback = 100000

-- " Set the command window height to 2 lines, to avoid many cases of having to press <Enter> to continue"
vim.opt.cmdheight = 2

-- " Display line numbers on the left
vim.opt.number = true
vim.opt.relativenumber = true

-- " Quickly time out on keycodes, but never time out on mappings
-- " set notimeout ttimeout ttimeoutlen=200

-- " Use <F12> to toggle between 'paste' and 'nopaste'
vim.opt.pastetoggle='<F12>'

-- vim.opt.wildignore+='/*/tmp/*,*.so,*.swp,*.zip'

-- if (has("termguicolors"))
vim.opt.termguicolors=true
-- endif

--Make line numbers default
vim.wo.number = true

--Enable mouse mode
vim.o.mouse = 'a'

--Enable break indent
vim.o.breakindent = true

--Save undo history
vim.opt.undofile = true

--Case insensitive searching UNLESS /C or capital in search
vim.o.ignorecase = true
vim.o.smartcase = true

--Decrease update time
vim.o.updatetime = 250
vim.wo.signcolumn = 'yes'
